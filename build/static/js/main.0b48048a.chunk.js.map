{"version":3,"sources":["Header/Header.js","Article/Article.js","Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","Component","Article","props","full_url","encodeURIComponent","website","link","result_img_url","API_URL","md5","your_api_secret","class","style","backgroundColor","concat","color","target","rel","category","name","description","src","alt","Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","editText","document","querySelector","classList","toggle","randomize","array","i","length","j","Math","floor","random","temp","state","newColor","_this2","myData","map","src_Article_Article","edit","key","App","src_Header_Header","src_Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8vIAmCeA,gMA9BX,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,QACtBH,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,WAAZ,IAAsBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,QAAtB,IAAuDH,EAAAC,EAAAC,cAAA,WAAvD,YAEAF,EAAAC,EAAAC,cAAA,yEARWG,sCCgCNC,EA3BC,SAAAC,GACd,IAEIC,EAFYC,mBAAmB,UAAYF,EAAMG,QAAQC,MAElC,4CAIvBC,EAAiBC,wEAHVC,IAAIC,2CAA2BP,GAGiB,cAAgBA,EAE3E,OACER,EAAAC,EAAAC,cAAA,WAASC,UAAW,WAAaI,EAAMG,QAAQM,MAAOC,MAAO,CAAEC,gBAAe,GAAAC,OAAKZ,EAAMG,QAAQU,SAC/FpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBC,KAAM,UAAYG,EAAMG,QAAQC,KAAMU,OAAO,SAASC,IAAI,wBACzFtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYI,EAAMG,QAAQa,UACzCvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQI,EAAMG,QAAQC,OAEvCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASI,EAAMG,QAAQc,MACtCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQI,EAAMG,QAAQe,eAGzCzB,EAAAC,EAAAC,cAAA,OAAKwB,IAAKd,EAAgBe,IAAKpB,EAAMG,QAAQc,yBCiBpCI,cAzCb,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzB,KAWR6B,SAAW,WACEC,SAASC,cAAc,YAC7BC,UAAUC,OAAO,aAdLX,EAiBnBY,UAAY,SAACC,GAEX,IADA,IAAIC,EAAID,EAAME,OAAS,EAChBD,EAAI,EAAGA,IAAK,CACnB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,GAtBLb,EAAKqB,MAAQ,CACX9B,MAAO,UACP+B,SAAU,IALKtB,wEA4BV,IAAAuB,EAAApB,KACP,OACEhC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WACG8B,KAAKS,UAAUY,EAAOC,IAAI,SAAC5C,EAASiC,GAAV,OACzB3C,EAAAC,EAAAC,cAACqD,EAAD,CAASC,KAAMJ,EAAKhB,SAAUqB,IAAKd,EAAGjC,QAASA,EAASyC,SAAUC,EAAKF,MAAMC,uBAlCtE9C,aCYJqD,mLATX,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAC0D,EAAD,cALUvD,aCMEwD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAAS/B,SAASgC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0b48048a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.scss'\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <div className=\"branding\">\n          <a href=\"/\" className=\"home\">\n          <h1>That's a<br></br> <div className=\"logo\">Cool</div> <br></br>Website</h1>\n          </a>\n          <p>A Curated Collection of Agency & Portfolio Websites</p>\n        </div>\n        {/* <nav>\n          <ul>\n            <li>\n              <a href=\"#\">Sign Up</a>\n            </li>\n            <li>\n              <a href=\"#\">Login</a> \n            </li>\n            <li>\n              <a href=\"#\">Explore</a>\n            </li>\n          </ul>\n        </nav> */}\n        {/* <div className=\"addWebsite\">\n          <a  className=\"addThis\"> <i class=\"fas fa-plus\"></i></a>\n          <Form />\n        </div> */}\n      </header>\n    );\n  }\n}\n\nexport default Header;","import './Article.scss';\nimport React from 'react';\nimport md5 from 'md5';\n\nvar API_URL = 'https://cdn.capture.techulus.in/';\nvar your_api_key = process.env.REACT_APP_API_KEY;\nvar your_api_secret = process.env.REACT_APP_API_SECRET;\n\nconst Article = props => {\n  var input_url = encodeURIComponent('http://' + props.website.link);\n  var options = 'delay=7&resizeWidth=400&resizeHeight=300';\n  var full_url = input_url + '&' + options;\n  var hash = md5(your_api_secret + 'url=' + full_url);\n\n  // Image URL\n  var result_img_url = API_URL + your_api_key + '/' + hash + '/image?url=' + full_url;\n\n  return (\n    <article className={'website ' + props.website.class} style={{ backgroundColor: `${props.website.color}` }}>\n      <a className=\"website-wrapper\" href={'http://' + props.website.link} target=\"_blank\" rel=\"noopener noreferrer\"></a>\n      <div className=\"text-wrapper\">\n        <div className=\"text-above\">\n          <div className=\"category\">{props.website.category}</div>\n          <div className=\"link\">{props.website.link}</div>\n        </div>\n        <div className=\"text-shown\">\n          <div className=\"title\">{props.website.name}</div>\n          <div className=\"desc\">{props.website.description}</div>\n        </div>    \n      </div>\n      <img src={result_img_url} alt={props.website.name} />\n    </article>\n  );\n};\n\nexport default Article;\n","import React, { Component } from \"react\";\nimport Article from \"../Article/Article\";\nimport \"./Main.scss\";\nimport myData from \"./../websites.json\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      color: \"#ffffff\",\n      newColor: \"\"\n    };\n    // this.setState() {\n    //   newColor :e.target.value\n    // }\n  }\n\n  editText = () => {\n    let edit = document.querySelector(\".website\");\n    edit.classList.toggle(\"editable\");\n  };\n\n  randomize = (array) => {\n    let i = array.length - 1;\n    for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n  };\n\n  render() {\n    return (\n      <main>\n        <div>\n          {this.randomize(myData.map((website, i) => (\n            <Article edit={this.editText} key={i} website={website} newColor={this.state.newColor} />\n          )))}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\n// import logo from './logo.svg';\nimport \"./Globals.scss\";\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"page\">\n        <Header />\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}